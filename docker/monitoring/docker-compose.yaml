version: "3.8"
networks:
  monitoring:
    external: true
  traefik_default:
    external: true
volumes:
  monitoring_prometheus:
  monitoring_grafana:
services:
  grafana:
    container_name: grafana
    image: grafana/grafana-oss:latest
    # reverse proxy traefik
    # ports:
    #   - "3000:3000"
    networks:
      - "monitoring"
      - "traefik_default"
    volumes:
      - monitoring_grafana:/var/lib/grafana
      - ./config/grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/rabbitmq.yaml
      - ./config/grafana/datasources.yml:/etc/grafana/provisioning/datasources/prometheus.yaml
      - ./config/grafana/dashboards:/dashboards
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.monitor.entrypoints=websecure"
      - "traefik.http.routers.monitor.rule=Host(`grafana.hoangnd.freeddns.org`)"
      - "traefik.http.routers.monitor.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.docker.network=traefik_default"
      - "traefik.http.routers.monitor.tls=true"
    environment:
      GF_INSTALL_PLUGINS: "flant-statusmap-panel,grafana-piechart-panel"
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.min-block-duration=2h"
      - "--storage.tsdb.max-block-duration=2h"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
      - "--web.enable-admin-api"
    networks:
      - "monitoring"
      - "traefik_default"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.hoangnd.freeddns.org`)"
      - "traefik.http.routers.prometheus.service=prometheus"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.docker.network=traefik_default"
      - "traefik.http.routers.prometheus.tls=true"
    # ports:
    #   - "9090:9090"
    volumes:
      - monitoring_prometheus:/prometheus
      - ./config/prometheus:/etc/prometheus
  
  alertmanager:
    image: prom/alertmanager:latest
    container_name: 'alertmanager'
    hostname: 'alertmanager'
    command:
      - '--config.file=/etc/alertmanager/config.yaml'
    networks:
      - "monitoring"
      - "traefik_default"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alertmanager.entrypoints=websecure"
      - "traefik.http.routers.alertmanager.rule=Host(`alertmanager.hoangnd.freeddns.org`)"
      - "traefik.http.routers.alertmanager.service=alertmanager"
      - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"
      - "traefik.docker.network=traefik_default"
      - "traefik.http.routers.alertmanager.tls=true"
    volumes:
      - ./config/alertmanager:/etc/alertmanager
    restart: unless-stopped
    ports:
      - 9093:9093

  node-exporter:
    container_name: node-exporter
    hostname: node-exporter
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    image: prom/node-exporter:latest
    networks:
      - "monitoring"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
  cadvisor:
    container_name: cadvisor
    hostname: cadvisor
    privileged: true
    # device: 
    # - /dev/kmsg
    expose:
      - 8080
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    networks:
      - "monitoring"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
